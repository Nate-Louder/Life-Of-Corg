{"ast":null,"code":"var _jsxFileName = \"E:\\\\life_of_corg\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport { Card, CardActions, CardContent, CardMedia, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport DecisionButton from './DecisionButton.js';\nimport './Game.css';\nimport ModalStuff from './ModalStuff.js';\nimport StatTracker from './StatTracker.js';\nimport { story } from './story.js';\nimport StoryTeller from './StoryTeller.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  name,\n  stats,\n  setStats,\n  setProgress\n}) => {\n  _s();\n  const [currentChapter, setCurrentChapter] = useState(1);\n  const [nextChaptered, setNextChaptered] = useState(0);\n  const [currentTitle, setCurrentTitle] = useState(story.chapters[0].title);\n  const [currentImage, setCurrentImage] = useState(story.chapters[0].image);\n  const [currentStory, setCurrentStory] = useState(story.chapters[0].story);\n  const [currentChoices, setCurrentChoices] = useState(story.chapters[0].options);\n  const [choiceMade, setChoiceMade] = useState({\n    stats: []\n  });\n  const [optionsAreAvailable, setOptionsAreAvailable] = useState(false);\n\n  // Modal\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleNext = newStats => {\n    setStats(newStats.strength, newStats.agility, newStats.intelligence, newStats.happiness);\n    setOpen(false);\n    setOptionsAreAvailable(false);\n    const nextChapter = story.chapters[nextChaptered];\n    console.log(nextChaptered);\n    setCurrentChapter(nextChapter.chapter);\n    setCurrentTitle(nextChapter.title);\n    setCurrentImage(nextChapter.image);\n    setCurrentStory(nextChapter.story);\n    setCurrentChoices(nextChapter.options);\n  };\n  const getBgImage = () => {\n    switch (currentChapter) {\n      case 1:\n        return 'adoption-home';\n      default:\n        return 'city';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Game ${getBgImage()}`,\n    children: [/*#__PURE__*/_jsxDEV(StatTracker, {\n      stats: stats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"You Are: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: 900\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [optionsAreAvailable, currentTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"500px\",\n        image: currentImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(StoryTeller, {\n          story: currentStory,\n          name: name,\n          onStoryEnd: () => {\n            setOptionsAreAvailable(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), optionsAreAvailable ? /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"choices\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Choose Your Path:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), currentChoices.map((choice, index) => /*#__PURE__*/_jsxDEV(DecisionButton, {\n            option: choice,\n            stats: stats,\n            onClick: () => {\n              setChoiceMade(choice);\n              setNextChaptered(choice.nextChapter);\n              handleOpen();\n            },\n            children: choice.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 40\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalStuff, {\n      open: open,\n      choice: choiceMade,\n      onClose: handleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"pjxv0J/H/76eAe8lgp5OcE89w9U=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Card","CardActions","CardContent","CardMedia","Typography","React","useState","DecisionButton","ModalStuff","StatTracker","story","StoryTeller","jsxDEV","_jsxDEV","Game","name","stats","setStats","setProgress","_s","currentChapter","setCurrentChapter","nextChaptered","setNextChaptered","currentTitle","setCurrentTitle","chapters","title","currentImage","setCurrentImage","image","currentStory","setCurrentStory","currentChoices","setCurrentChoices","options","choiceMade","setChoiceMade","optionsAreAvailable","setOptionsAreAvailable","open","setOpen","handleOpen","handleNext","newStats","strength","agility","intelligence","happiness","nextChapter","console","log","chapter","getBgImage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","component","height","onStoryEnd","variant","map","choice","index","option","onClick","text","onClose","_c","$RefreshReg$"],"sources":["E:/life_of_corg/src/Game.js"],"sourcesContent":["\r\nimport { Card, CardActions, CardContent, CardMedia, Typography } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport DecisionButton from './DecisionButton.js';\r\nimport './Game.css';\r\nimport ModalStuff from './ModalStuff.js';\r\nimport StatTracker from './StatTracker.js';\r\nimport { story } from './story.js';\r\nimport StoryTeller from './StoryTeller.js';\r\n\r\nconst Game = ({name, stats, setStats, setProgress}) => {\r\n\r\n    const [currentChapter, setCurrentChapter] = useState(1);\r\n    const [nextChaptered, setNextChaptered] = useState(0);\r\n    const [currentTitle, setCurrentTitle] = useState(story.chapters[0].title);\r\n    const [currentImage, setCurrentImage] = useState(story.chapters[0].image);\r\n    const [currentStory, setCurrentStory] = useState(story.chapters[0].story);\r\n    const [currentChoices, setCurrentChoices] = useState(story.chapters[0].options);\r\n    const [choiceMade, setChoiceMade] = useState({stats: []});\r\n    const [optionsAreAvailable, setOptionsAreAvailable] = useState(false);\r\n\r\n    // Modal\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n\r\n    const handleNext = (newStats) => {\r\n        setStats(newStats.strength, newStats.agility, newStats.intelligence, newStats.happiness);\r\n        setOpen(false);\r\n        setOptionsAreAvailable(false);\r\n        const nextChapter = story.chapters[nextChaptered];\r\n        console.log(nextChaptered);\r\n        setCurrentChapter(nextChapter.chapter);\r\n        setCurrentTitle(nextChapter.title);\r\n        setCurrentImage(nextChapter.image);\r\n        setCurrentStory(nextChapter.story);\r\n        setCurrentChoices(nextChapter.options);\r\n    }\r\n\r\n    const getBgImage = () => {\r\n        switch (currentChapter) {\r\n            case 1:\r\n                return 'adoption-home';\r\n            default: \r\n                return 'city';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`Game ${getBgImage()}`}>\r\n            <StatTracker stats={stats}/>\r\n            <Card>\r\n                <CardContent><Typography>\r\n                You Are: {name}\r\n                    </Typography></CardContent>\r\n            </Card>\r\n            <Card sx={{width: 900}}>\r\n                    <CardContent>\r\n                        {optionsAreAvailable}\r\n                        {currentTitle}\r\n                    </CardContent>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        height=\"500px\"\r\n                        image={currentImage}\r\n\r\n                    />\r\n                    <CardContent>\r\n                        <StoryTeller story={currentStory} name={name} onStoryEnd={() => {setOptionsAreAvailable(true)}}/>\r\n                    </CardContent>\r\n                {optionsAreAvailable ? <CardActions>\r\n                    <div className='choices'>\r\n                        <Typography variant=\"h6\">Choose Your Path:</Typography>\r\n                        {currentChoices.map((choice, index) => (\r\n                            <DecisionButton option={choice} stats={stats} onClick={() => {\r\n                                setChoiceMade(choice);\r\n                                setNextChaptered(choice.nextChapter);\r\n                                handleOpen();\r\n                            }}>\r\n                                {choice.text}\r\n                            </DecisionButton>\r\n                        ))}\r\n                    </div>\r\n                </CardActions>: null}\r\n            </Card>\r\n            <ModalStuff open={open} choice={choiceMade} onClose={handleNext}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}