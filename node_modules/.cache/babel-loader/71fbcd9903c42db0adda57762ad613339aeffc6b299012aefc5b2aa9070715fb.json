{"ast":null,"code":"var _jsxFileName = \"E:\\\\life_of_corg\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport { Card, CardActions, CardContent, CardMedia, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport DecisionButton from './DecisionButton.js';\nimport './Game.css';\nimport ModalStuff from './ModalStuff.js';\nimport StatTracker from './StatTracker.js';\nimport { story } from './story.js';\nimport StoryTeller from './StoryTeller.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  name,\n  stats,\n  setStats,\n  setProgress\n}) => {\n  _s();\n  const [currentChapter, setCurrentChapter] = useState(1);\n  const [nextChaptered, setNextChaptered] = useState(0);\n  const [currentTitle, setCurrentTitle] = useState(story.chapters[0].title);\n  const [currentImage, setCurrentImage] = useState(story.chapters[0].image);\n  const [currentStory, setCurrentStory] = useState(story.chapters[0].story);\n  const [currentChoices, setCurrentChoices] = useState(story.chapters[0].options);\n  const [choiceMade, setChoiceMade] = useState({\n    stats: []\n  });\n  const [optionsAreAvailable, setOptionsAreAvailable] = useState(false);\n\n  // Modal\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleNext = newStats => {\n    console.log(nextChaptered);\n    setStats(newStats.strength, newStats.agility, newStats.intelligence, newStats.happiness);\n    setOpen(false);\n    setOptionsAreAvailable(false);\n    const nextChapter = story.chapters[nextChaptered];\n    setCurrentChapter(nextChapter.chapter);\n    setCurrentTitle(nextChapter.title);\n    setCurrentImage(nextChapter.image);\n    setCurrentStory(nextChapter.story);\n    setCurrentChoices(nextChapter.options);\n  };\n  const getBgImage = () => {\n    switch (currentChapter) {\n      case 1:\n        return 'background1';\n      default:\n        return 'background1';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Game ${getBgImage()}`,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"player-card\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"You Are: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"story-card\",\n      children: [/*#__PURE__*/_jsxDEV(StatTracker, {\n        stats: stats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          className: \"story-title\",\n          children: currentTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"500\",\n        image: currentImage,\n        className: \"story-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(StoryTeller, {\n          story: currentStory,\n          name: name,\n          onStoryEnd: () => {\n            setOptionsAreAvailable(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), optionsAreAvailable && /*#__PURE__*/_jsxDEV(CardActions, {\n        className: \"choices-container\",\n        children: currentChoices.map((choice, index) => /*#__PURE__*/_jsxDEV(DecisionButton, {\n          option: choice,\n          stats: stats,\n          onClick: () => {\n            setChoiceMade(choice);\n            setNextChaptered(choice.nextChapter);\n            handleOpen();\n          },\n          className: \"decision-button\",\n          children: choice.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalStuff, {\n      open: open,\n      choice: choiceMade,\n      onClose: handleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"pjxv0J/H/76eAe8lgp5OcE89w9U=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Card","CardActions","CardContent","CardMedia","Typography","React","useState","DecisionButton","ModalStuff","StatTracker","story","StoryTeller","jsxDEV","_jsxDEV","Game","name","stats","setStats","setProgress","_s","currentChapter","setCurrentChapter","nextChaptered","setNextChaptered","currentTitle","setCurrentTitle","chapters","title","currentImage","setCurrentImage","image","currentStory","setCurrentStory","currentChoices","setCurrentChoices","options","choiceMade","setChoiceMade","optionsAreAvailable","setOptionsAreAvailable","open","setOpen","handleOpen","handleNext","newStats","console","log","strength","agility","intelligence","happiness","nextChapter","chapter","getBgImage","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","component","height","onStoryEnd","map","choice","index","option","onClick","text","onClose","_c","$RefreshReg$"],"sources":["E:/life_of_corg/src/Game.js"],"sourcesContent":["import { Card, CardActions, CardContent, CardMedia, Typography } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport DecisionButton from './DecisionButton.js';\r\nimport './Game.css';\r\nimport ModalStuff from './ModalStuff.js';\r\nimport StatTracker from './StatTracker.js';\r\nimport { story } from './story.js';\r\nimport StoryTeller from './StoryTeller.js';\r\n\r\nconst Game = ({name, stats, setStats, setProgress}) => {\r\n\r\n    const [currentChapter, setCurrentChapter] = useState(1);\r\n    const [nextChaptered, setNextChaptered] = useState(0);\r\n    const [currentTitle, setCurrentTitle] = useState(story.chapters[0].title);\r\n    const [currentImage, setCurrentImage] = useState(story.chapters[0].image);\r\n    const [currentStory, setCurrentStory] = useState(story.chapters[0].story);\r\n    const [currentChoices, setCurrentChoices] = useState(story.chapters[0].options);\r\n    const [choiceMade, setChoiceMade] = useState({stats: []});\r\n    const [optionsAreAvailable, setOptionsAreAvailable] = useState(false);\r\n\r\n    // Modal\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n\r\n    const handleNext = (newStats) => {\r\n        console.log(nextChaptered);\r\n        setStats(newStats.strength, newStats.agility, newStats.intelligence, newStats.happiness);\r\n        setOpen(false);\r\n        setOptionsAreAvailable(false);\r\n        const nextChapter = story.chapters[nextChaptered];\r\n        setCurrentChapter(nextChapter.chapter);\r\n        setCurrentTitle(nextChapter.title);\r\n        setCurrentImage(nextChapter.image);\r\n        setCurrentStory(nextChapter.story);\r\n        setCurrentChoices(nextChapter.options);\r\n    }\r\n\r\n    const getBgImage = () => {\r\n        switch (currentChapter) {\r\n            case 1:\r\n                return 'background1';\r\n            default: \r\n                return 'background1';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`Game ${getBgImage()}`}>\r\n            \r\n            <Card className=\"player-card\">\r\n                <CardContent>\r\n                    <Typography variant=\"h6\">\r\n                        You Are: {name}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card className=\"story-card\">\r\n                <StatTracker stats={stats}/>\r\n                <CardContent>\r\n                    <Typography variant=\"h4\" className=\"story-title\">\r\n                        {currentTitle}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"500\"\r\n                    image={currentImage}\r\n                    className=\"story-image\"\r\n                />\r\n                <CardContent>\r\n                    <StoryTeller story={currentStory} name={name} onStoryEnd={() => {setOptionsAreAvailable(true)}}/>\r\n                </CardContent>\r\n                {optionsAreAvailable && (\r\n                    <CardActions className=\"choices-container\">\r\n                        {currentChoices.map((choice, index) => (\r\n                            <DecisionButton \r\n                                key={index}\r\n                                option={choice} \r\n                                stats={stats} \r\n                                onClick={() => {\r\n                                    setChoiceMade(choice);\r\n                                    setNextChaptered(choice.nextChapter);\r\n                                    handleOpen();\r\n                                }}\r\n                                className=\"decision-button\"\r\n                            >\r\n                                {choice.text}\r\n                            </DecisionButton>\r\n                        ))}\r\n                    </CardActions>\r\n                )}\r\n            </Card>\r\n            <ModalStuff open={open} choice={choiceMade} onClose={handleNext}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}