{"ast":null,"code":"import{Typography}from\"@mui/material\";import Button from\"@mui/material/Button\";import React,{useEffect,useState}from\"react\";import\"./StoryTeller.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StoryTeller=_ref=>{let{story,name,onStoryEnd}=_ref;const[currentPage,setCurrentPage]=useState(0);useEffect(()=>{setCurrentPage(0);},[story]);const handleNext=()=>{if(currentPage<story.length-2){setCurrentPage(currentPage+1);}else{setCurrentPage(currentPage+1);onStoryEnd();}};const parseStory=story=>{const boldRegex=/\\[(.*?)\\]/g;const parsedStory=story.replace(/<name>/g,name).replace(boldRegex,\"<strong>$1</strong>\");return/*#__PURE__*/_jsx(Typography,{className:\"story-text\",dangerouslySetInnerHTML:{__html:parsedStory}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"story-teller\",children:[parseStory(story[currentPage]),currentPage<story.length-1?/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleNext,className:\"next-button\",children:\"Next\"}):null]});};export default StoryTeller;","map":{"version":3,"names":["Typography","Button","React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","StoryTeller","_ref","story","name","onStoryEnd","currentPage","setCurrentPage","handleNext","length","parseStory","boldRegex","parsedStory","replace","className","dangerouslySetInnerHTML","__html","children","variant","color","onClick"],"sources":["E:/life_of_corg/src/StoryTeller.js"],"sourcesContent":["import { Typography } from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./StoryTeller.css\";\r\n\r\nconst StoryTeller = ({ story, name, onStoryEnd }) => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        setCurrentPage(0);\r\n    }, [story]);\r\n\r\n    const handleNext = () => {\r\n        if (currentPage < story.length - 2) {\r\n            setCurrentPage(currentPage + 1);\r\n        } else {\r\n            setCurrentPage(currentPage + 1);\r\n            onStoryEnd();\r\n        }\r\n    };\r\n\r\n    const parseStory = (story) => {\r\n      const boldRegex = /\\[(.*?)\\]/g;\r\n      const parsedStory = story.replace(/<name>/g, name).replace(boldRegex, \"<strong>$1</strong>\");\r\n      return <Typography className=\"story-text\" dangerouslySetInnerHTML={{ __html: parsedStory }} />;\r\n    };\r\n\r\n    return (\r\n        <div className=\"story-teller\">\r\n            {parseStory(story[currentPage])}\r\n\r\n            {currentPage < story.length - 1 ? (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleNext} className=\"next-button\">\r\n                    Next\r\n                </Button>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StoryTeller;\r\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,eAAe,CAC1C,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3B,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAiC,IAAhC,CAAEC,KAAK,CAAEC,IAAI,CAAEC,UAAW,CAAC,CAAAH,IAAA,CAC5C,KAAM,CAACI,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAAC,CAEjDD,SAAS,CAAC,IAAM,CACZY,cAAc,CAAC,CAAC,CAAC,CACrB,CAAC,CAAE,CAACJ,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAK,UAAU,CAAGA,CAAA,GAAM,CACrB,GAAIF,WAAW,CAAGH,KAAK,CAACM,MAAM,CAAG,CAAC,CAAE,CAChCF,cAAc,CAACD,WAAW,CAAG,CAAC,CAAC,CACnC,CAAC,IAAM,CACHC,cAAc,CAACD,WAAW,CAAG,CAAC,CAAC,CAC/BD,UAAU,CAAC,CAAC,CAChB,CACJ,CAAC,CAED,KAAM,CAAAK,UAAU,CAAIP,KAAK,EAAK,CAC5B,KAAM,CAAAQ,SAAS,CAAG,YAAY,CAC9B,KAAM,CAAAC,WAAW,CAAGT,KAAK,CAACU,OAAO,CAAC,SAAS,CAAET,IAAI,CAAC,CAACS,OAAO,CAACF,SAAS,CAAE,qBAAqB,CAAC,CAC5F,mBAAOb,IAAA,CAACN,UAAU,EAACsB,SAAS,CAAC,YAAY,CAACC,uBAAuB,CAAE,CAAEC,MAAM,CAAEJ,WAAY,CAAE,CAAE,CAAC,CAChG,CAAC,CAED,mBACIZ,KAAA,QAAKc,SAAS,CAAC,cAAc,CAAAG,QAAA,EACxBP,UAAU,CAACP,KAAK,CAACG,WAAW,CAAC,CAAC,CAE9BA,WAAW,CAAGH,KAAK,CAACM,MAAM,CAAG,CAAC,cAC3BX,IAAA,CAACL,MAAM,EAACyB,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,SAAS,CAACC,OAAO,CAAEZ,UAAW,CAACM,SAAS,CAAC,aAAa,CAAAG,QAAA,CAAC,MAEzF,CAAQ,CAAC,CACT,IAAI,EACP,CAAC,CAEd,CAAC,CAED,cAAe,CAAAhB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}